import math

class Vector:
    def __init__(self, x, y, z=0):
        self.x = x
        self.y = y
        self.z = z



    def __repr__(self):
        return f"({self.x}, {self.y}, {self.z})"

   
    def __add__(self, other):
        return Vector(self.x + other.x, self.y + other.y, self.z + other.z)


    
    def __mul__(self, other):
        if isinstance(other, Vector): 
            return self.x*other.x + self.y*other.y + self.z*other.z
        else:  
            return Vector(self.x * other, self.y * other, self.z * other)



   
    def magnitud(self):
        return math.sqrt(self.x**2 + self.y**2 + self.z**2)

   
    def normal(self):
        m = self.magnitud()
        if m == 0:
            raise ValueError("No se puede normalizar el vector nulo")
        return Vector(self.x/m, self.y/m, self.z/m)

    
    def dot(self, other):
        return self.x*other.x + self.y*other.y + self.z*other.z

    
    def cross(self, other):
        return Vector(
            self.y*other.z - self.z*other.y,
            self.z*other.x - self.x*other.z,
            self.x*other.y - self.y*other.x
        )

    
    def proyeccion(self, other):
        factor = (self * other) / (other.magnitud()**2)
        return other * factor


#PRUEBA
a = Vector(3, 4, 0)
b = Vector(5, 0, 2)

print("a =", a)
print("b =", b)


print("Proyecci√≥n de a sobre b =", a.proyeccion(b))

